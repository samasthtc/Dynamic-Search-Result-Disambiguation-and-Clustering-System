# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is also recommended to ignore cache/ directory.
.idea/

# VS Code
.vscode/
*.code-workspace

# Local History for Visual Studio Code
.history/

# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msm
*.msp

# Windows shortcuts
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# ===================================================================
# PROJECT-SPECIFIC IGNORES
# ===================================================================

# Machine Learning Models & Cached Data
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
*.model
models/
model_cache/
transformers_cache/
sentence_transformers/

# Trained RL Agent States
rl_agent_state.pkl
system_metrics.json
clustering_cache/
embeddings_cache/

# Data Files (uncomment if you don't want to track data)
# data/
# datasets/
# *.csv
# *.json
# *.xlsx
# *.tsv

# Logs and Output Files
logs/
*.log
output/
results/
experiments/
evaluation_results/

# Configuration Files with Secrets
config.local.py
secrets.py
.env.local
.env.production
api_keys.txt

# Database Files
*.db
*.sqlite
*.sqlite3

# Search Index Files
search_index/
*.index

# Temporary Analysis Files
temp/
tmp/
scratch/
sandbox/

# Large Files (adjust size limits as needed)
*.zip
*.tar.gz
*.rar
*.7z

# Jupyter Notebook Outputs (keep notebooks but ignore outputs)
# Uncomment if you want to track notebooks without outputs
# *.ipynb

# Documentation Build Files
docs/build/
docs/_build/
*.pdf

# IDE and Editor Files
.spyderproject
.spyproject
.ropeproject
*.swp
*.swo
*~

# OS Generated Files
.DS_Store?
ehthumbs.db
Icon?
Thumbs.db

# Local Development Overrides
local_settings.py
development.py

# Flask Session Files
flask_session/

# Backup Files
*.bak
*.backup
*.old

# Performance Profiling
*.prof
*.profile

# Test Coverage
htmlcov/
.coverage
coverage.xml
*.cover

# Temporary Search Simulator Data
simulation_data.json
benchmark_results.json
user_behavior_logs.json

# Academic Paper Drafts (if applicable)
draft/
paper_drafts/
*.docx
*.tex.backup

# Research Notes (uncomment if you want to keep private)
# notes/
# research_notes/
# ideas.txt

# System-specific
.python-version
node_modules/
package-lock.json

# Additional ML/NLP specific
word2vec/
glove/
fasttext/
bert_models/
transformers_models/
downloaded_models/

# Experimental Results
experiments_backup/
old_results/
archive/

# Security
*.pem
*.key
*.cert
*.crt
ssl/

# Cache directories
.cache/
cache/
__pycache__/
.pytest_cache/

# Local development databases
dev.db
test.db
local.db

# Editor backup files
*~
*.tmp
.#*
\#*#

# Project-specific temporary files
search_results_cache/
clustering_results/
feedback_data/
user_sessions/